# Dockerfile.worker

# ---- Builder Stage ----
# This stage builds the TypeScript code into JavaScript.
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files and install ALL dependencies (including dev dependencies)
COPY package*.json ./
RUN npm ci

# Copy the rest of the source code
COPY . .

# Run the build command to compile TypeScript and copy assets
RUN npm run build


# ---- Production Stage ----
# This is the final, lean image that will be deployed.
FROM node:20-alpine

WORKDIR /app

# Copy package files and install ONLY production dependencies
COPY package*.json ./
RUN npm ci --only=production

# Copy the compiled code from the 'builder' stage
COPY --from=builder /app/dist ./dist

# Create a non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Change ownership of the app directory
RUN chown -R nextjs:nodejs /app

# Switch to the non-root user
USER nextjs

# The command to start your worker process
CMD ["npm", "run", "worker"]